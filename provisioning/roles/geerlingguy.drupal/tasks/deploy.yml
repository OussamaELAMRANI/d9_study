---
- name: Ensure drupal_deploy_dir directory exists.
  file:
    path: "{{ drupal_deploy_dir }}"
    state: directory
    mode: 0775
    owner: "{{ drupal_core_owner }}"
    group: "{{ drupal_core_owner }}"
  when: drupal_composer_path and not drupal_site_exists

- name: Check out Drupal to the docroot.
  git:
    repo: "{{ drupal_deploy_repo }}"
    version: "{{ drupal_deploy_version }}"
    update: "{{ drupal_deploy_update }}"
    force: true
    dest: "{{ drupal_deploy_dir }}"
    accept_hostkey: "{{ drupal_deploy_accept_hostkey }}"
  register: drupal_deploy_repo_updated
  notify: clear opcache
  become: "{{ drupal_core_owner_become }}"
  become_user: "{{ drupal_core_owner }}"

- name: Check if a composer.json file is present.
  stat: "path={{ drupal_deploy_dir }}/composer.json"
  register: drupal_deploy_composer_file

# Use manual composer require tasks until Ansible 2.10.4 is released.
- name: Run composer install if composer.json is present.
  command: "composer install -d {{ drupal_deploy_dir }}{% if drupal_composer_no_dev %} --no-dev{% endif %}"
  register: composer_install_result
  changed_when: "'Nothing to install' not in composer_install_result.stderr"
  when:
    - drupal_deploy_composer_file.stat.exists
    - drupal_deploy_composer_install
  become: "{{ drupal_core_owner_become }}"
  become_user: "{{ drupal_core_owner }}"

# Switch back to this task after Ansible 2.10.4 is released.
# - name: Run composer install if composer.json is present.
#   composer:
#     command: install
#     working_dir: "{{ drupal_deploy_dir }}"
#     no_dev: "{{ drupal_composer_no_dev }}"
#   when:
#     - drupal_deploy_composer_file.stat.exists
#     - drupal_deploy_composer_install
#   become: "{{ drupal_core_owner_become }}"
#   become_user: "{{ drupal_core_owner }}"
